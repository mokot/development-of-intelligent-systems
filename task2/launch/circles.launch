<launch>
    <!-- Normal camera -->
    <node pkg="task2" type="circle" name="circle_body" output="screen">

        <param name="depth" type="string" value="/camera/depth/image_raw" />
        <param name="rgb" type="string" value="/camera/rgb/image_raw" />
        <param name="camera_frame" type="string" value="camera_rgb_optical_frame" />

        <param name="hits" type="string" value="/circles/hits/1" />

        <param name="debug" type="bool" value="false" />
        <param name="ring_marker" type="string" value="/ring_detect/marker" />
        <param name="ring_image" type="string" value="/ring_detect/image" />
    </node>

    <!-- Arm camera -->
    <node pkg="task2" type="circle" name="circle_arm" output="screen">
        <!-- Which camera to read from -->
        <param name="depth" type="string" value="/arm_camera/depth/image_raw" />
        <param name="rgb" type="string" value="/arm_camera/rgb/image_raw" />
        <param name="camera_frame" type="string" value="arm_camera_rgb_optical_frame" />

        <!-- Where to publish circle hits -->
        <param name="hits" type="string" value="/circles/hits/2" />

        <!-- Debugging -->
        <param name="debug" type="bool" value="true" />
        <param name="ring_marker" type="string" value="/ring_detect/marker" />
        <param name="ring_image" type="string" value="/ring_detect/image" />
    </node>

    <!-- Clusterer -->
    <node pkg="task2" type="cluster_database.py" name="circle_cluster" output="screen">
        <rosparam param="topic_list">
            [
                /circles/hits/1,
                /circles/hits/2
            ]
        </rosparam>
        <param name="marker_topic" type="string" value="/markers/circles" />
        <param name="number_of_objects" type="int" value="4" />
    </node>
</launch>